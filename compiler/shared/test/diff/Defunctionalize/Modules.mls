:NewDefs

:e // FIXME: Change behaviour based on TypeDefKind
:mono
class Foo() {fun f = 0}
module x { val y = Foo() }
x.y.f
//│ Lifted:
//│ TypingUnit {
//│   class Foo$1([]) {fun f = 0}
//│   module x$2([]) {let y = Foo$1()}
//│   Code(List(((x$2).y).f))
//│ }
//│ Mono:
//│ Cannot select from non-object value TypeVal(x$2)
//│ ╔══[ERROR] Post-process failed to produce AST, defaulting to standard AST
//│ ╙──
//│ class Foo() {
//│   fun f: 0
//│ }
//│ module x {
//│   val y: Foo
//│ }
//│ 0
//│ res
//│     = 0
