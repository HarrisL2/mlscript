:NewDefs

:sd
:nolift

class X() {
    val num = 6
}
class Y() {
    val num = true
}
fun foo(pred) = if pred then X() else Y()
fun id(x) = x
val a = foo(true)
val b = id(a)
b.num
//│ Lifted:
//│ TypingUnit {
//│   class X$1([]) {let num = 6}
//│   class Y$2([]) {let num = true}
//│   fun foo$3 = (pred,) => if (pred) then X$1() else Y$2()
//│   fun id$4 = (x,) => x
//│   let a$1 = foo$3(true,)
//│   let b$2 = id$4(a$1,)
//│   Code(List((b$2).num))
//│ }
//│ class X() {
//│   val num: 6
//│ }
//│ class Y() {
//│   val num: true
//│ }
//│ fun foo: Bool -> (X | Y)
//│ fun id: forall 'a. 'a -> 'a
//│ val a: X | Y
//│ val b: X | Y
//│ 6 | true
//│ a
//│   = X {}
//│ b
//│   = X {}
//│ res
//│     = 6
