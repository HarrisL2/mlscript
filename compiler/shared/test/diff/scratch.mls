:NewDefs

:nm
:dd
class Foo() {fun f = 0}
module x { val y = Foo() }
x.y.f
//│ Parsed:
//│ TypingUnit(NuTypeDef(class, Foo, (), Tup(), (), None, None, TypingUnit(NuFunDef(None, f, None, [], IntLit(0)))), NuTypeDef(module, x, (), Tup(), (), None, None, TypingUnit(NuFunDef(Some(false), y, None, [], App(Var(Foo), Tup())))), Sel(Sel(Var(x), y), f))
//│ Lifted:
//│ TypingUnit(NuTypeDef(class, Foo$1, (), Tup(), (), None, None, TypingUnit(NuFunDef(None, f, None, [], IntLit(0)))), NuTypeDef(module, x$2, (), Tup(), (), None, None, TypingUnit(NuFunDef(Some(false), y, None, [], App(Var(Foo$1), Tup())))), Sel(Sel(App(Var(x$2), Tup()), y), f))
//│ TypingUnit {
//│   class Foo$1([]) {fun f = 0}
//│   module x$2([]) {let y = Foo$1()}
//│   Code(List(((x$2()).y).f))
//│ }
//│ Mono:
//│ Queue: HashSet(main$$2)
//│ Evaluating main$$2
//│ ╓Eval Sel(Sel(App(Var(x$2), Tup()), y), f):
//│ ║╓Eval Sel(App(Var(x$2), Tup()), y):
//│ ║║╓Eval App(Var(x$2), Tup()):
//│ ║║║╓Eval Var(x$2):
//│ ║║║╙Result List(TypeVal(x$2)):
//│ ║║║╓Eval Tup():
//│ ║║║╙Result List(TupVal(Map())):
//│ ║║╙Result List(ObjVal(x$2, HashMap())):
//│ ║╙Result List(FuncVal(y$x$2, None, List((this,ObjVal(x$2, HashMap()))))):
//│ Cannot select from non-object value FuncVal(y$x$2, None, List((this,ObjVal(x$2, HashMap()))))
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.DiffTests.$anonfun$new$30(DiffTests.scala:453)
//│ 	at: scala.Option.getOrElse(Option.scala:201)
//│ 	at: mlscript.DiffTests.rec$1(DiffTests.scala:453)
//│ 	at: mlscript.DiffTests.$anonfun$new$3(DiffTests.scala:1080)
//│ 	at: org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
//│ 	at: org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
//│ 	at: org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
//│ 	at: org.scalatest.Transformer.apply(Transformer.scala:22)
//│ 	at: org.scalatest.Transformer.apply(Transformer.scala:20)
