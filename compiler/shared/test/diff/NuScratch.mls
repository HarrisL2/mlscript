:NewDefs

:p
(y,x: Int) => y+1
//│ |(|y|,|x|#:| |Int|)| |#=>| |y|+|1|
//│ AST: TypingUnit(List(Lam(Tup(List((None,Fld(_,Var(y))), (Some(Var(x)),Fld(_,Var(Int))))),App(Var(+),Tup(List((None,Fld(_,Var(y))), (None,Fld(_,IntLit(1)))))))))
//│ Lifted:
//│ TypingUnit(List(NuTypeDef(Cls,TypeName(Lambda2$1$1),List(),Some(Tup(List())),None,None,List(),None,None,TypingUnit(List(NuFunDef(None,Var(apply),None,List(),Left(Lam(Tup(List((None,Fld(_,Var(y))), (Some(Var(x)),Fld(_,Var(Int))))),App(Var(+),Tup(List((None,Fld(_,Var(y))), (None,Fld(_,IntLit(1)))))))))))), Blk(List(App(Var(Lambda2$1$1),Tup(List()))))))
//│ TypingUnit {
//│   class Lambda2$1$1([]) {fun apply = (y, x: Int,) => +(y, 1,)}
//│   Code(List({Lambda2$1$1()}))
//│ }
//│ Parsed: (y, x: Int,) => +(y, 1,);
//│ (Int, x: Int) -> Int
//│ res
//│     = [Function: res]
